#! /usr/bin/env bash

set -e

# Init basic profile.
CONF="${CONF:-${HOME}/conf}"

readonly branch="${CONF_BRANCH:-master}"
readonly repo="https://github.com/shawnohare/conf.git"

if [ ! -d "${CONF}" ]; then
  echo "Cloning ${repo}"
  git clone -b "${branch} "--recursive "${repo}" "${CONF}"
fi

if [ ! -d "${CONF}" ]; then
  >&2 echo "Error: Could not clone config repo."
  exit 1
fi

cd "${CONF}"
# git checkout "${branch}"
source profile/.env
source profile/.profile

mkdir -p "${USER_BIN_HOME}"
mkdir -p "${USER_CONFIG_HOME}"
mkdir -p "${USER_CACHE_HOME}"
mkdir -p "${USER_LIB_HOME}"
mkdir -p "${USER_SHARE_HOME}"
mkdir -p "${USER_SRC_HOME}"
mkdir -p "${USER_TMP_HOME}"
mkdir -p "${USER_VAR_HOME}"

for file in .env .profile .bash_profile .bashrc .zshenv .zshrc; do
  original="${HOME}/${file}"
  backup="${original}.backup"
  [ -L "${original}" ] && continue

  if [ -f "${original}" ] && [ -f "${backup}" ]; then
    echo "It appears some profile backups have already been created. Exiting"
    exit 1
  elif [ -f "${original}" ]; then
    echo "Backing up ${original} -> ${backup}"
    mv "${original}" "${backup}"
  fi
done

make link

# NOTE:
# Should have 3-stage for bootstrapping.
# 1. Init that creates dirs / links files.
# 2. Install toolchains.
# 3. Install packages

# NOTE:
# More granular approach would be:
# 1. Create dirs / backup existing profiles (for ec2, etc.)
# 2. Link.
# 3. Install toolchains.
# 4. Install packages: upkg or a series of commands?

# Likely an abuse of make (to call it during the config part)
# make link


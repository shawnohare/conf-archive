#!/usr/bin/env bash

set -e

# Default location for pyenv.  This is overriden by ~/.profile.
PYENV_ROOT="${PYENV_ROOT:-${HOME}/.pyenv}"
# readonly versions=("3.7.0" "2.7.15")
# readonly venvs=(neovim user)  # Venvs to install in each major version.
readonly py2ver="2.7.15"
readonly py3ver="3.7.0"

install_pyenv() {
  if [ ! -e "${PYENV_ROOT}/bin/pyenv" ]; then
    echo "Installing pyenv."
    curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
  fi
  echo "Updating pyenv."
  pyenv update
}

# Install a particular version of python.
install_python() {
  if [ ! -e "${PYENV_ROOT}/versions/$1/bin/python" ]; then
    pyenv install $1
  fi
}

# Create a python $1 virtualenv named $2.
virtualenv() {
  echo "Installing $1 $2"

  install_python $1

  local bin="${PYENV_ROOT}/versions/$1/envs/$2/bin"

  # Remove the eponymous venv that might have a different minor version.
  if [ ! -e "${bin}/python" ]; then
    pyenv uninstall --force $2
    pyenv virtualenv $1 $2
  fi

  local requirements="${XDG_CONFIG_HOME}/python/requirements-$2.txt"
  if [ -e "${requirements}" ]; then
    "${bin}/pip" install -U -r "${requirements}"
  fi

}




main() {
  install_pyenv
  virtualenv "${py2ver}" "user2"
  virtualenv "${py2ver}" "neovim2"
  virtualenv "${py3ver}" "user3"
  virtualenv "${py3ver}" "neovim3"
  pyenv global "user3" "user2" "system"
}

main $@

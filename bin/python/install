#!/usr/bin/env bash

set -e

# Default location for pyenv.  This is overriden by ~/.profile.
PYENV_ROOT="${PYENV_ROOT:-${HOME}/.pyenv}"
readonly versions=("3.6.5" "2.7.15")  
readonly venvs=(neovim user)  # Venvs to install in each major version.

install_pyenv() {
  if [ ! -e "${PYENV_ROOT}/bin/pyenv" ]; then
    echo "Installing pyenv."
    curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
  fi
  echo "Updating pyenv."
  pyenv update
}

# Install a particular version of python.
install_python() {
  if [ ! -e "${PYENV_ROOT}/versions/$1/bin/python" ]; then
    pyenv install $1
  fi
}

# Create a python $1 virtualenv $2.
install_venv(){
  echo "Installing $1 $2"
  install_python $1
  if [ ! -e "${PYENV_ROOT}/versions/$1/envs/$2/bin/python" ]; then
    # Remove the eponymous venv that might have a different minor version.
    pyenv uninstall --force $2
    pyenv virtualenv $1 $2
  fi
}

install_packages() {
  local reqs="${XDG_CONFIG_HOME}/python/packages"
  echo "Install user packages specified in: ${reqs}"
  for ver in 2 3; do
    "${PYENV_ROOT}/versions/neovim${ver}/bin/pip" install -U pip neovim 
    "${PYENV_ROOT}/versions/user${ver}/bin/pip" install \
      -U -r "${reqs}/py${ver}" \
      -U -r "${reqs}/all" 
  done
}


main() {
  install_pyenv
  for ver in "${versions[@]}"; do
    local major_ver="${ver:0:1}"
    for venv in "${venvs[@]}"; do
      install_venv "${ver}" "${venv}${major_ver}"
    done
  done

  install_packages
  pyenv global user3 user2 system
}

main $@

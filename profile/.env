#!/bin/sh
# Sourceable and executable file that sets some basic environment variables.
# PATH is not set to avoid shells / programs overriding.

# Local, user-specific home dirs. Structure should generally follow BSD
# while mixing in a few folders used programs following an XDG spec.
# Local software that is not managed as part of any package manager and can
# be accessed by multiple users should go in /usr/local/opt. Otherwise,
# we prefer to use the user home dir for truly local installs.
export USER_ENV_FILE="${HOME}/.env"
export USER_CONFIG_HOME="${HOME}/etc"
export USER_BIN_HOME="${HOME}/bin"
export USER_LIB_HOME="${HOME}/lib"
export USER_LOCAL_HOME="${HOME}/local" # similar to /usr/local
export USER_SRC_HOME="${HOME}/src"
export USER_SHARE_HOME="${HOME}/share" # data, state, historiy, etc.
export USER_CACHE_HOME="${HOME}/cache" # can be wiped after reboot, non-essential
export USER_TMP_HOME="${HOME}/tmp"
export USER_VAR_HOME="${HOME}/var"
export USER_DATA_HOME="${USER_SHARE_HOME}"
export CONF="${HOME}/conf"

# Many applications utilize the XDG config settings. Align with above.
export XDG_BIN_HOME="${USER_BIN_HOME}"
export XDG_CONFIG_HOME="${USER_CONFIG_HOME}"
export XDG_CACHE_HOME="${USER_CACHE_HOME}"
export XDG_DATA_HOME="${USER_SHARE_HOME}"
export XDG_STATE_HOME="${USER_VAR_HOME}" # not really official

# Misc vars forcing apps to adhere to the dir structure above.
export AWS_CONFIG_FILE="${USER_CONFIG_HOME}/aws/config"
export AWS_SHARED_CREDENTIALS_FILE="${USER_CONFIG_HOME}/aws/credentials"
export CONDA_HOME="${USER_LOCAL_HOME}/miniconda"
export CONF="${HOME}/conf"
export IPYTHONDIR="${HOME}/local/ipython"
export NIXPKGS_CONFIG="${USER_CONFIG_HOME}/nixpkgs/config.nix"
export PYENV_ROOT="${USER_LOCAL_HOME}/pyenv"
export PYSPARK_DRIVER_PYTHON="ipython"
export PYTHONUSERBASE="${USER_LOCAL_HOME}"
export SCREENRC="${USER_CONFIG_HOME}/screen/screenrc"
export SPACEMACSDIR="${USER_CONFIG_HOME}/spacemacs"
export STACK_ROOT="${USER_DATA_HOME}/stack"
export USER_NIX_PROFILE="${HOME}/.nix-profile/etc/profile.d/nix.sh"

export PYSPARK_DRIVER_PYTHON="ipython"

# General
export BASH="/usr/local/bin/bash"
# Setting the BROWSER env var can break fish's help command.
# export BROWSER="safari"
export ECLIPSE_HOME="${HOME}/Applications/Eclipse.app/Contents/Eclipse"
export EDITOR="nvim"
export VISUAL="nvim"

# colors
# All of these settings enable consistent coloring of the most frequently
# used parts of the CLI. For historical reasons 'ls', 'less', 'grep', and
# the completion menu all require separate color settings.

# Enable command line color
export CLICOLOR=1
# Define colors for the 'ls' command on BSD/Darwin
export LSCOLORS='exfxcxdxbxGxDxabagacad'
# Define colors for the zsh completion system
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:'

# The pager 'less' (the default pager for man-pages) depends on
# the (obsolete) TERMCAP library for color capabilities. Exporting
# the following parameters provides for colored man-page display.
export LESSHISTFILE="${USER_DATA_HOME}/less/history"
export LESS_TERMCAP_mb=$'\E[01;31m'    # begins blinking = LIGHT_RED
export LESS_TERMCAP_md=$'\E[0;34m'     # begins bold = BLUE
export LESS_TERMCAP_me=$'\E[0m'        # ends mode = NO_COLOR
export LESS_TERMCAP_se=$'\E[0m'        # ends standout-mode = NO_COLOR
export LESS_TERMCAP_so=$'\E[00;47;30m' # begins standout-mode = REVERSE_WHITE
export LESS_TERMCAP_ue=$'\E[0m'        # ends underline = NO_COLOR
export LESS_TERMCAP_us=$'\E[01;32m'    # begins underline = LIGHT_GREEN

# The following provide color highlighing by default for GREP
# export GREP_COLOR='37;45'
# NOTE: GREP_OPTIONS is deprecated.
# export GREP_OPTIONS='--color=auto'

# PATH exports.
export GOPATH="${USER_SRC_HOME}/go"
export CARGO_HOME="${HOME}/local/cargo"
export RUSTUP_HOME="${HOME}/local/rustup" # Might be superfluous.
